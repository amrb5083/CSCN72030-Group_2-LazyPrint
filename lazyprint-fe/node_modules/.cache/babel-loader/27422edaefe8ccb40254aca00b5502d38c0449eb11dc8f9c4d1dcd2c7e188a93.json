{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TechNerd-Academic\\\\Documents\\\\Source Code Files\\\\Cloned from GitHub\\\\CSCN72030-Group_2-LazyPrint\\\\lazyprint-fe\\\\src\\\\components\\\\PrintJob\\\\PrintJob.jsx\",\n  _s = $RefreshSig$();\n// PrintJobComponent.jsx\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { printJobContainerStyle, fileInputStyle, inputFieldStyle, createJobButtonStyle, successMessageStyle } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrintJobComponent = ({\n  onSelectPrintJob\n}) => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [pages, setPages] = useState(1);\n  const [printJobCreated, setPrintJobCreated] = useState(false);\n  const handlePrintJob = () => {\n    // Perform print job creation logic (e.g., send request to a server)\n    // For simplicity, check if a file is selected before setting printJobCreated to true\n    if (file) {\n      setPrintJobCreated(true);\n      // Call the onSelectPrintJob function to pass the print job data to the parent component\n      onSelectPrintJob({\n        file,\n        pages\n      });\n    } else {\n      alert('Please select a file for printing');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: printJobContainerStyle,\n    children: printJobCreated ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: successMessageStyle,\n      children: \"Print job created successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0]),\n        style: fileInputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of pages\",\n        value: pages,\n        onChange: e => setPages(e.target.value),\n        style: inputFieldStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrintJob,\n        style: createJobButtonStyle,\n        children: \"Create Print Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Add prop validation\n_s(PrintJobComponent, \"+EBnjK+P45Hke9EbjqYjcyC1qro=\");\n_c = PrintJobComponent;\nPrintJobComponent.propTypes = {\n  onSelectPrintJob: PropTypes.func.isRequired\n};\nexport default PrintJobComponent;\nvar _c;\n$RefreshReg$(_c, \"PrintJobComponent\");","map":{"version":3,"names":["React","useState","PropTypes","printJobContainerStyle","fileInputStyle","inputFieldStyle","createJobButtonStyle","successMessageStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","PrintJobComponent","onSelectPrintJob","_s","file","setFile","pages","setPages","printJobCreated","setPrintJobCreated","handlePrintJob","alert","style","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","placeholder","value","onClick","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["C:/Users/TechNerd-Academic/Documents/Source Code Files/Cloned from GitHub/CSCN72030-Group_2-LazyPrint/lazyprint-fe/src/components/PrintJob/PrintJob.jsx"],"sourcesContent":["// PrintJobComponent.jsx\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  printJobContainerStyle,\r\n  fileInputStyle,\r\n  inputFieldStyle,\r\n  createJobButtonStyle,\r\n  successMessageStyle,\r\n} from './styles';\r\n\r\nconst PrintJobComponent = ({ onSelectPrintJob }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [pages, setPages] = useState(1);\r\n  const [printJobCreated, setPrintJobCreated] = useState(false);\r\n\r\n  const handlePrintJob = () => {\r\n    // Perform print job creation logic (e.g., send request to a server)\r\n    // For simplicity, check if a file is selected before setting printJobCreated to true\r\n    if (file) {\r\n      setPrintJobCreated(true);\r\n      // Call the onSelectPrintJob function to pass the print job data to the parent component\r\n      onSelectPrintJob({ file, pages });\r\n    } else {\r\n      alert('Please select a file for printing');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={printJobContainerStyle}>\r\n      {printJobCreated ? (\r\n        <p style={successMessageStyle}>Print job created successfully!</p>\r\n      ) : (\r\n        <>\r\n          <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} style={fileInputStyle} />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Number of pages\"\r\n            value={pages}\r\n            onChange={(e) => setPages(e.target.value)}\r\n            style={inputFieldStyle}\r\n          />\r\n          <button onClick={handlePrintJob} style={createJobButtonStyle}>\r\n            Create Print Job\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Add prop validation\r\nPrintJobComponent.propTypes = {\r\n  onSelectPrintJob: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default PrintJobComponent;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,SACEC,sBAAsB,EACtBC,cAAc,EACdC,eAAe,EACfC,oBAAoB,EACpBC,mBAAmB,QACd,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElB,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkB,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMoB,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACA;IACA,IAAIN,IAAI,EAAE;MACRK,kBAAkB,CAAC,IAAI,CAAC;MACxB;MACAP,gBAAgB,CAAC;QAAEE,IAAI;QAAEE;MAAM,CAAC,CAAC;IACnC,CAAC,MAAM;MACLK,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEb,OAAA;IAAKc,KAAK,EAAEpB,sBAAuB;IAAAqB,QAAA,EAChCL,eAAe,gBACdV,OAAA;MAAGc,KAAK,EAAEhB,mBAAoB;MAAAiB,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAElEnB,OAAA,CAAAE,SAAA;MAAAa,QAAA,gBACEf,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAGC,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAE;QAACV,KAAK,EAAEnB;MAAe;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzFnB,OAAA;QACEoB,IAAI,EAAC,QAAQ;QACbK,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAElB,KAAM;QACba,QAAQ,EAAGC,CAAC,IAAKb,QAAQ,CAACa,CAAC,CAACC,MAAM,CAACG,KAAK,CAAE;QAC1CZ,KAAK,EAAElB;MAAgB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACFnB,OAAA;QAAQ2B,OAAO,EAAEf,cAAe;QAACE,KAAK,EAAEjB,oBAAqB;QAAAkB,QAAA,EAAC;MAE9D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACT;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAd,EAAA,CAxCMF,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AAyCvBA,iBAAiB,CAAC0B,SAAS,GAAG;EAC5BzB,gBAAgB,EAAEX,SAAS,CAACqC,IAAI,CAACC;AACnC,CAAC;AAGD,eAAe5B,iBAAiB;AAAC,IAAAyB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}